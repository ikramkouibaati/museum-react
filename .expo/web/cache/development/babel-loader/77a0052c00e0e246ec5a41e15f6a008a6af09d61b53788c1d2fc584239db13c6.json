{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Password = function Password() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleResetPassword = function () {\n    var _ref = _asyncToGenerator(function* () {});\n    return function handleResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsxs(View, {\n      style: {\n        width: '80%'\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        style: {\n          marginBottom: 10,\n          padding: 10,\n          borderWidth: 1\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"New Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: setPassword,\n        style: {\n          marginBottom: 10,\n          padding: 10,\n          borderWidth: 1\n        }\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: handleResetPassword,\n        children: \"Reset Your Password\"\n      })]\n    })\n  });\n};\nexport default Password;","map":{"version":3,"names":["React","useState","View","TextInput","AsyncStorage","Button","jsx","_jsx","jsxs","_jsxs","Password","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleResetPassword","_ref","_asyncToGenerator","apply","arguments","style","flex","justifyContent","alignItems","children","width","placeholder","value","onChangeText","marginBottom","padding","borderWidth","secureTextEntry","mode","onPress"],"sources":["C:/Users/ing/Documents/M1_DEV/Rendu/composants/login/Password.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Button } from 'react-native-paper';\r\n\r\nconst Password = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n  \r\n    const handleResetPassword = async () => {\r\n     \r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <View style={{ width: '80%' }}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            style={{ marginBottom: 10, padding: 10, borderWidth: 1 }}\r\n          />\r\n          <TextInput\r\n            placeholder=\"New Password\"\r\n            secureTextEntry\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            style={{ marginBottom: 10, padding: 10, borderWidth: 1 }}\r\n          />\r\n          <Button mode=\"contained\" onPress={handleResetPassword}>\r\n            Reset Your Password\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default Password;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAExC,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAEnB,IAAAC,SAAA,GAA0BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY,CAExC,CAAC;IAAA,gBAFKF,mBAAmBA,CAAA;MAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;EAAA,GAExB;EAED,OACIjB,IAAA,CAACL,IAAI;IAACuB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACzEpB,KAAA,CAACP,IAAI;MAACuB,KAAK,EAAE;QAAEK,KAAK,EAAE;MAAM,CAAE;MAAAD,QAAA,GAC5BtB,IAAA,CAACJ,SAAS;QACR4B,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAElB,KAAM;QACbmB,YAAY,EAAElB,QAAS;QACvBU,KAAK,EAAE;UAAES,YAAY,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE;MAAE,CAC1D,CAAC,EACF7B,IAAA,CAACJ,SAAS;QACR4B,WAAW,EAAC,cAAc;QAC1BM,eAAe;QACfL,KAAK,EAAEd,QAAS;QAChBe,YAAY,EAAEd,WAAY;QAC1BM,KAAK,EAAE;UAAES,YAAY,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE;MAAE,CAC1D,CAAC,EACF7B,IAAA,CAACF,MAAM;QAACiC,IAAI,EAAC,WAAW;QAACC,OAAO,EAAEnB,mBAAoB;QAAAS,QAAA,EAAC;MAEvD,CAAQ,CAAC;IAAA,CACL;EAAC,CACH,CAAC;AAEb,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}